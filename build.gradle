defaultTasks 'check'

apply plugin: 'java'
/* we are a Java project, obviously */
sourceCompatibility = '1.8'


apply plugin: 'eclipse'
/* generate eclipse project, disable compiler warnings on tests */
eclipse {
	classpath {
		file {
			whenMerged { classpath ->
			 	classpath.entries.findAll{entry -> entry.kind == 'src' && entry.path == 'src/test/java'}.each{
			 		entry -> entry.entryAttributes['ignore_optional_problems'] = true
			 	}
			}
		}
	}
}


apply plugin: 'jacoco'
/* generate Java code coverage reports */
jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
	}
}

apply plugin: 'com.cinnober.gradle.semver-git'
/* deduce build version number from git tags
   source: https://github.com/cinnober/semver-git */
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath group: 'com.cinnober.gradle', name: 'semver-git', version: '2.2.1'
	}
}


apply plugin: 'info.solidsoft.pitest'
/* mutation testing plugin
   see: https://pitest.org https://gradle-pitest-plugin.solidsoft.info */
pitest {
	targetClasses = ['de.cgarbs.wavefront.*']
}
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: '1.1.11'
	}
}


apply plugin: 'maven-publish'
/* publish directly to maven repositories */
publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = 'de.cgarbs'
			artifactId = 'wavefront-simple'

			from components.java

			artifact packageSources {
				classifier 'sources'
			}

			artifact packageJavadoc {
				classifier 'javadoc'
			}
		}
	}
}
publishing {
	repositories {
		maven {
			name "cgarbs.de local repo"
			url "file:/home/mitch/pub/www/maven2"
			/* sad panda: aparrently SFTP currently only works with passwords, not with pubkey */
		}
	}
}



repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
}

task packageSources(type: Jar, dependsOn: 'classes') {
	from sourceSets.main.allSource
	classifier = 'sources'
}
task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
	from javadoc
	classifier = 'javadoc'
}

 /***
 **** my own tasks
 ***/

task version() {
     description 'Show version that would be published'

     println 'version=' + version
}
